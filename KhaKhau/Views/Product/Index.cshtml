@model ProDisplayModel
@using KhaKhau.Areas.Identity.Data;
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
@inject SignInManager<ApplicationUser> SignInManager

@inject UserManager<ApplicationUser> UserManager
@{
     Layout = "~/Views/Shared/_DatMonLayout.cshtml";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link href="~/css/home.css" rel="stylesheet" />
@* <div class="my-2">
    <form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center">
        <div class="col-12">
            <label class="visually-hidden" for="categoryId">Genres</label>
            <select class="form-select" id="categoryId" name="categoryId">
                <option selected>Genre</option>
                @foreach (var category in Model.Categories)
                {
                   <option selected="@(category.Id == Model.CategoryId)" value="@category.Id">@category.Name</option>
                    
                }
            </select>
        </div>

        <div class="col-12">
            <label class="visually-hidden" for="sterm">Bạn muốn ăn gì?</label>
            <div class="input-group">
                <div class="input-group-text"></div>
                <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Bạn muốn ăn gì?">
            </div>
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Search</button>
            <a href="Product/Index" class="btn btn-dark">Reset</a>
        </div>
    </form>
</div>

<div class="w-100 mt-4 d-flex flex-wrap ">
    @foreach (var pro in Model.Products)
    {
        <div class="card mx-3 mb-4" style="width: 11rem;">
            <a class="text-decoration-none text-dark"  asp-controller="Product" asp-action="Display" asp-route-id="@pro.Id">
            @if (string.IsNullOrEmpty(pro.ImageUrl))
            {
                <img style="width:100%;height:180px" src="/images/NoImage.png" class="card-img-top" alt="...">

            }
            else
            {
                <img style="width:100%;height:180px" src="@pro.ImageUrl" class="card-img-top" alt="...">
            }
            <div class="card-body">
					<h5 style="color:#C5705D" class="card-title">@pro.Name</h5>
                <p class="card-text">
                        <b >Category: </b>@pro.CategoryName <br />
                    <b>Description:</b>
                       
                        @if(pro.Description.Count() > 20)
                        {
                           <span> @pro.Description.Substring(0,20)...
                               </span>
                            
                        }
                        else
                        {
                            @pro.Description
                        }

                     <br />
                    <b>Price: </b>@pro.Price.ToString("#,##0")
					<br /> <b>Quantity:</b>@pro.Quantity
                </p>
                @if (pro.Quantity > 0)
                {
                        <button id="btn_css" class="mx-3" onclick="add(@pro.Id)">
                            <i class="fa fa-shopping-cart"></i>
                               Thêm vào giỏ hàng
                        </button>
                    }
                else
              {
                        <span class="mx-3"  style="border: 1px solid;padding: 5px 8px;color: red;border-radius: 5px;">Out of stock</span>
                 }
            </div>
            </a>
        </div>
    }
</div>
<style>
    #btn_css {
        background-color: #4A4947; /* Green */
        color: white;
        border-radius: 10px;
        text-decoration: none;
        display: inline-block;
        padding: 10px 3px;
        font-size: 10px;
        
        
    }
    #btn_css .text{
            clear: both;
            display: inline-block;
            overflow: hidden;
            white-space: nowrap;
    }
</style>
@section Scripts{
    <script>
        // alert("Shopping Cart!");
        async function add(productId) {
                 var usernameEl = document.getElementById("username");
            if(usernameEl==null){
                window.location.href = "/Identity/Account/Login";
            var username=usernameEl.innerText;
             if(username.length<1){
                 window.location.href="/Identity/Account/Login";
             }
            }
            try {
                var response = await fetch(`/Cart/AddItem?productId=${productId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
    </script>
}

@* <script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script> *@
<partial name="_HeaderLayout" style="padding-top:0px" />

 <body>

<div class="container">
    <h1>Thực Đơn Nhà Hàng</h1>

    <!-- Phần Lọc và Tìm kiếm -->
    <div class="filter-section">
        <input type="text" id="search" placeholder="Tìm kiếm món ăn theo tên..." onkeyup="searchByName()">
        <select id="categoryFilter" onchange="filterProducts()">
            <option value="">Tất cả loại</option>
            @foreach (var category in Model.Categories)
            {
                    switch (category.Name)
                    {
                        case "DiemTam" :
                            <option value = "@category.Id">Điểm tâm</option>
                            break; 
                        case "KhaiVi" :
                            <option value = "@category.Id">Khai vị</option>
                            break; 
                        case "MonChinh" :
                            <option value = "@category.Id">Món chính</option>
                            break; 
                        

                    }
            }
        </select>
        <select id="priceFilter" onchange="filterProducts()">
            <option value="">Tất cả mức giá</option>
            <option value="0-99000">Dưới 100,000 VND</option>
            <option value="100000-150000">100,000 - 150,000 VND</option>
            <option value="150000-200000">150,000 - 200,000 VND</option>
            <option value="200000">Trên 200,000 VND</option>
        </select>
    </div>

		<!-- Lưới Sản Phẩm -->   
        <div class="menu-grid" id="menuGrid">

    @foreach (var product in Model.Products)
        {

            <div class="menu-item"

                 data-category="@product.CategoryId"
                 data-price="@product.Price">
                                          <a class="text-decoration-none text-dark"  asp-controller="Product" asp-action="Display" asp-route-id="@product.Id">

                <img src="@Url.Content(product.ImageUrl ?? "~/images/NoImage.png")" alt="@product.Name">
                <h3>@product.Name</h3>
                <p class="price">@product.Price.ToString("N0") vnđ</p>
                <p class="status">@((product.Quantity > 0) ? "Còn hàng" : "Hết hàng")</p>
					</a>
					<div class="buttons">
                    <a href="/Product/Display/@product.Id" class="btn-details">Xem Chi Tiết</a>
                    @if (product.Quantity > 0)
                    {
                        <button onclick="addToCart(@product.Id)" class="btn-add-cart">Thêm vào Giỏ</button>
                    }
						</div>
            </div>
        
   
    }
    </div>
</div>
</body>
<style>
    /* Reset mặc định */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: Roboto, sans-serif;
        background-color: #f9f9f9;
    }

    .container {
        max-width: 1200px;
/*         margin: 50px auto;
 */       
/*         padding: 20px;
 */        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
    }

    h1 {
        text-align: center;
        color: #C5705D;
        margin-bottom: 30px;
        padding:20px;
    }

    .filter-section {
        display: flex;
        justify-content: space-between;
        gap: 15px;
        margin-bottom: 20px;
    }

        .filter-section input,
        .filter-section select {
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            width: 30%;
        }

    .menu-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    .menu-item {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: center;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .menu-item:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
        }

        .menu-item img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
        }

        .menu-item h3 {
            margin: 15px 0;
            font-size: 1.2rem;
            color: #333;
        }

    .price {
        font-weight: bold;
        color: #e74c3c;
        margin: 10px 0;
    }

    .status {
        font-style: italic;
        color: #2ecc71;
    }

    .buttons {
        display: flex;
        gap: 10px;
        justify-content: center;
        margin-top: 10px;
    }

    .btn-details {
        background-color: #3498db;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
    }

    .btn-add-cart {
        background-color: #2ecc71;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .btn-details:hover {
        background-color: #2980b9;
    }

    .btn-add-cart:hover {
        background-color: #27ae60;
    }

</style>


<script>
    function searchByName() {
        let input = document.getElementById('search').value.toLowerCase();
        let items = document.getElementsByClassName('menu-item');

        Array.from(items).forEach(item => {
            let name = item.querySelector('h3').textContent.toLowerCase();
            item.style.display = name.includes(input) ? 'block' : 'none';
        });
    }

    function filterProducts() {
        let categoryFilter = document.getElementById('categoryFilter').value;
        let priceFilter = document.getElementById('priceFilter').value;
        let items = document.getElementsByClassName('menu-item');

        Array.from(items).forEach(item => {
            let category = item.getAttribute('data-category');
            let price = parseFloat(item.getAttribute('data-price'));

            // Xử lý khoảng giá từ bộ lọc
            let minPrice = 0;
            let maxPrice = Infinity;

            if (priceFilter.includes('-')) {
                [minPrice, maxPrice] = priceFilter.split('-').map(Number);
            } else if (priceFilter) {
                minPrice = parseFloat(priceFilter);
            }

            // Kiểm tra điều kiện lọc
            let matchesCategory = !categoryFilter || category === categoryFilter;
            let matchesPrice = (price >= minPrice && price <= maxPrice);

            // Hiển thị hoặc ẩn sản phẩm dựa trên các bộ lọc
            if (matchesCategory && matchesPrice) {
                item.style.display = 'block';
            } else {
                item.style.display = 'none';
            }
        });
    }

    async function addToCart(productId) {
        try {
            const response = await fetch(`/Cart/AddItem?productId=${productId}&qty=1`, {
                method: 'POST'
            });

            if (response.ok) {
                const cartCount = await response.json(); // Giả sử API trả về số lượng sản phẩm trong giỏ
                document.getElementById('cartCount').innerText = cartCount; // Cập nhật số lượng trong giỏ ở tiêu đề
                alert('Đã thêm sản phẩm vào giỏ hàng!');
            } else {
                alert('Lỗi khi thêm vào giỏ hàng. Vui lòng thử lại.');
            }
        } catch (error) {
            console.error('Lỗi khi thêm sản phẩm vào giỏ hàng:', error);
            alert('Lỗi khi thêm vào giỏ hàng. Vui lòng thử lại.');
        }
    }
</script>

